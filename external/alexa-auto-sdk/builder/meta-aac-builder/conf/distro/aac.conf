DISTRO = "aac"
DISTRO_NAME = "Alexa Auto SDK"
DISTRO_VERSION = "${@aac.get_version(d)}"
DISTRO_CODENAME = "${@aac.get_codename(d)}"

# Workarounds
USER_CLASSES = ""

# Use OpenSSL from host by default
AAC_ASSUME_PROVIDED ?= "openssl"
AAC_PKG_CONFIG_PROVIDED ?= "libcrypto"

# Use all cross-toolchain from host
ASSUME_PROVIDED += "\
    linux-libc-headers \
    virtual/${TARGET_PREFIX}gcc \
    virtual/${TARGET_PREFIX}binutils \
    virtual/${TARGET_PREFIX}libc-for-gcc \
    virtual/${TARGET_PREFIX}compilerlibs \
    virtual/libc \
    virtual/libiconv \
    ${AAC_ASSUME_PROVIDED} \
    "

# Our dedicated root path prefix
AAC_PREFIX = "/opt/AAC"
export prefix = "${AAC_PREFIX}"

# Skip these QA for now
ERROR_QA_remove = "file-rdeps"
WARN_QA_remove = "useless-rpaths host-user-contaminated"

# Use our pkgconfig logic
INHERIT += "aac-base"

# Use AVS Device SDK v1.13
PREFERRED_VERSION_avs-device-sdk ?= "1.13%"

# Debug build
IMAGE_GEN_DEBUGFS ?= "${@['0', '1'][d.getVar('DEBUG_BUILD') == '1']}"
PACKAGE_DEBUG_SPLIT_STYLE = "debug-without-src"

##################################################################
# Amazon Build Info
##################################################################

AMAZON_SOURCES ?= "${HOME}/amazon_sources"

PACKAGE_MACHINE ?= "${@[d.getVar('BUILD_SYS'), d.getVar('MACHINE')][d.getVar('MACHINE') != 'native']}"
