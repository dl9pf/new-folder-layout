From 1b9c44163036d1c28e55d508ffe6d33492e92569 Mon Sep 17 00:00:00 2001
From: Koji Matsuoka <koji.matsuoka.xm@renesas.com>
Date: Thu, 7 Dec 2017 20:10:39 +0900
Subject: [PATCH 043/122] drm/bridge: adv7511: Add frequency and vrefresh
 limitation option

This patch adds processing of frequency and vrefresh to ADV7511.

Signed-off-by: Koji Matsuoka <koji.matsuoka.xm@renesas.com>
---
 drivers/gpu/drm/bridge/adv7511/adv7511.h     |  7 +++++++
 drivers/gpu/drm/bridge/adv7511/adv7511_drv.c | 22 ++++++++++++++++++++++
 2 files changed, 29 insertions(+)

diff --git a/drivers/gpu/drm/bridge/adv7511/adv7511.h b/drivers/gpu/drm/bridge/adv7511/adv7511.h
index 73d8ccb..8a30267 100644
--- a/drivers/gpu/drm/bridge/adv7511/adv7511.h
+++ b/drivers/gpu/drm/bridge/adv7511/adv7511.h
@@ -271,6 +271,8 @@ enum adv7511_sync_polarity {
  * @sync_pulse:			Select the sync pulse
  * @vsync_polarity:		vsync input signal configuration
  * @hsync_polarity:		hsync input signal configuration
+ * @limit_vrefresh_option:	limit vrefresh option
+ * @limit_freq_option:		limit frequency option
  */
 struct adv7511_link_config {
 	unsigned int input_color_depth;
@@ -285,6 +287,9 @@ struct adv7511_link_config {
 	enum adv7511_input_sync_pulse sync_pulse;
 	enum adv7511_sync_polarity vsync_polarity;
 	enum adv7511_sync_polarity hsync_polarity;
+
+	unsigned int limit_vrefresh_option;
+	unsigned int limit_freq_option;
 };
 
 /**
@@ -354,6 +359,8 @@ struct adv7511 {
 	enum adv7511_sync_polarity vsync_polarity;
 	enum adv7511_sync_polarity hsync_polarity;
 	bool rgb;
+	unsigned int limit_vref;
+	unsigned int limit_freq;
 
 	struct gpio_desc *gpio_pd;
 
diff --git a/drivers/gpu/drm/bridge/adv7511/adv7511_drv.c b/drivers/gpu/drm/bridge/adv7511/adv7511_drv.c
index 808021f..470be69 100644
--- a/drivers/gpu/drm/bridge/adv7511/adv7511_drv.c
+++ b/drivers/gpu/drm/bridge/adv7511/adv7511_drv.c
@@ -323,6 +323,8 @@ static void adv7511_set_link_config(struct adv7511 *adv7511,
 	adv7511->hsync_polarity = config->hsync_polarity;
 	adv7511->vsync_polarity = config->vsync_polarity;
 	adv7511->rgb = config->input_colorspace == HDMI_COLORSPACE_RGB;
+	adv7511->limit_vref = config->limit_freq_option;
+	adv7511->limit_freq = config->limit_vrefresh_option;
 }
 
 static void __adv7511_power_on(struct adv7511 *adv7511)
@@ -672,6 +674,16 @@ static enum drm_mode_status adv7511_mode_valid(struct adv7511 *adv7511,
 	if (mode->clock > 165000)
 		return MODE_CLOCK_HIGH;
 
+	if (adv7511->limit_freq) {
+		if (mode->clock > (adv7511->limit_freq / 1000))
+			return MODE_CLOCK_HIGH;
+	}
+
+	if (adv7511->limit_vref) {
+		if (drm_mode_vrefresh(mode) < adv7511->limit_vref)
+			return MODE_BAD;
+	}
+
 	return MODE_OK;
 }
 
@@ -1089,6 +1101,16 @@ static int adv7511_parse_dt(struct device_node *np,
 	config->vsync_polarity = ADV7511_SYNC_POLARITY_PASSTHROUGH;
 	config->hsync_polarity = ADV7511_SYNC_POLARITY_PASSTHROUGH;
 
+	ret = of_property_read_u32(np, "limit-frequency",
+				   &config->limit_vrefresh_option);
+	if (ret < 0)
+		config->limit_vrefresh_option = 0;
+
+	ret = of_property_read_u32(np, "lower-refresh",
+				   &config->limit_freq_option);
+	if (ret < 0)
+		config->limit_freq_option = 0;
+
 	return 0;
 }
 
-- 
2.7.4

